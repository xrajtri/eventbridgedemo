AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: myATMapp

Globals:
  Function:
    Timeout: 120

Parameters:
  FromEmail:
    Type: String
  ToEmail:
    Type: String

Resources:
  atmProducerFn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: producer/
      Handler: index.lambdaHandler
      Runtime: nodejs12.x
      Policies:
        - Statement:
          - Effect: Allow
            Resource: '*'
            Action:
              - events:PutEvents

  atmConsumerCase1Fn:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: consumer/
      Handler: index.case1Handler
      Runtime: nodejs12.x
      Environment:
        Variables:
          FROM_EMAIL: !Ref FromEmail
          TO_EMAIL: !Ref ToEmail
      Policies:
        - SESCrudPolicy:
            IdentityName: !Ref FromEmail
        - SESCrudPolicy:
            IdentityName: !Ref ToEmail

  EventRuleCase1: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "Approved transactions"
      EventPattern: 
        source: 
          - "custom.myATMapp"
        detail-type:
          - transaction   
        detail: 
          result: 
            - "approved"
      State: "ENABLED"
      EventBusName: "BankEventBus"
      Targets: 
        - 
          Arn: 
            Fn::GetAtt: 
              - "atmConsumerCase1Fn"
              - "Arn"
          Id: "atmConsumerTarget1"

  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: 
        Ref: "atmConsumerCase1Fn"
      Action: "lambda:InvokeFunction"
      Principal: "events.amazonaws.com"
      SourceArn: 
        Fn::GetAtt: 
          - "EventRuleCase1"
          - "Arn"

  SampleCustomEventBus: 
    Type: AWS::Events::EventBus
    Properties: 
        Name: "BankEventBus"